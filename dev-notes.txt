1. In order to check the app within mobile devices add to "vite.config.js" within 
"export default defineConfig({})" these lines:
server: {
    host: true  
}
and then head to http://IPv4:PortNumber

2. In order to create developer documentations create "jsdoc.json" file (you can modify the lines):
{
    "plugins": ["plugins/markdown"],
    "source": {
        "include": ["src", "tutorials"],
        "exclude": ["node_modules", "cypress"],
        "includePattern": ".+\\.js(doc|x)?$"
    },
    "opts": {
        "template": "node_modules/docdash",
        "destination": "./documentation/developer"
    },
    "docdash": {
	"search": true,
	"collapse": false
    }
}

Then make sure that JSDoc is installed: npm install -g jsdoc
Choose any theme for your doc (docdash, minami, etc.) and install: npm install docdash --save-dev
Set your "jsdoc.json" file accordingly (depending on the theme).
I personally changed the styling of docdash since I don't like it. Headed to 
node_modules/docdash/static/ and then in the "fonts" folder added my "circular-std-2.ttf" file
and in the "styles" folder modified the jsdoc.css file (you can copy the whole styling from
"my-jsdoc-styles-modification.txt" file and paste it over there since I already preCSSed it).
You should first generate the documentation alongside with the tutorials (if you have). Tutorials
may have their own "tutorials" folder in the root. Create "tutorial name.md" file(s) and
write the tutorial. That name will be tagged within the code (usually in the beginning with author
info): {@tutorial tutorial name} without the ".md" extension.
Run: jsdoc -u ./tutorials/ -c jsdoc.json
-u ./tutorials/ means that it generates any tutorial within the "tutorials" folder.
-c jsdoc.json generates the rest of the documented code

Keep in mind: @function tags has to be used in order to document inner functions of components too.
For useState() hooks use @typedef {(variableType|function(variableType))}.

3. In order to test your app with Cypress follow:
npm run dev (the server has to be up)
"npm install cypress --save-dev" to install Cypress locally as a dev dependency
"npx cypress open" to eXecute the Cypress window

4. In order to deploy a React (with Vite) application follow these steps:
Run: npm install gh-pages --save-dev
In "package.json" file at the top of it add: 
    "homepage": "https://sleeplessglory.github.io/repositoryName/"
In the same file in "scripts" section add: 
    "predeploy": "npm run build",
    "deploy": "gh-pages -d dist"
Now head to "vite.config.js" file and add above "plugins":
    base: "/competition-records/",
Push all your commits to the remote repository and then run: npm run deploy
Wait a few minutes and check out your deployed application on github pages (settings -> pages)